name: 'publish'

on:
  push:
    branches:
      - main
jobs:
  stage1:
    runs-on: ubuntu-latest

    outputs:
      docs-hash: ${{ steps.docshash.outputs.docs-hash }}
      docs-hash-current: ${{ steps.docshash.outputs.docs-hash-current }}
      docs-hash-previous: ${{ steps.docshash.outputs.docs-hash-previous }}

    env:
      DOCS_HASH: hashFiles('**/*.md', '**/Gemfile.lock')

    steps:
      - uses: actions/checkout@v2

      - name: Cache docshash file between runs
        uses: actions/cache@v3
        env:
          cache-name: cache-docs-hash
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: .docshash
          key: ${{ runner.os }}-build-${{ env.cache-name }}

      - uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: 'npm'

      - name: Install node dependencies
        run: npm ci

      - name: Run Tests
        run: npm test

      - name: Build Docs
        run: npm run docs

      - id: docshash
        name: Output hash of all markdown files
        run: |
          hash=$(find . -type f -iname "*.md" -exec shasum {} \;| shasum | cut -d" " -f1)
          prev=$(cat .docshash 2>/dev/null)
          echo "DOCS_HASH: $DOCS_HASH"
          echo "LOCAL HASH: $hash"
          echo "PREVIOUS HASH: $prev"
          echo "::set-output name=docs-hash::$DOCS_HASH"
          echo "::set-output name=docs-hash-current::$hash"
          echo "::set-output name=docs-hash-previous::$prev"
          echo "$hash"> .docshash

      - name: Upload the documents
        uses: actions/upload-artifact@v2
        with:
          name: docs
          path: |
            **/*.md
            !node_modules/*
          retention-days: 1
  stage2:
    runs-on: ubuntu-latest
    needs: stage1
    if: ${{ success() && needs.stage1.outputs.docs-hash-current != needs.stage1.outputs.docs-hash-previous }}

    steps:
      - name: Download the build output
        uses: actions/download-artifact@v2
        with:
          name: docs

      - name: List files
        run: ls -la

